version: 2.1

references:
  PLUGIN_FULL_PATH: &PLUGIN_FULL_PATH
    wordpress-develop/src/wp-content/plugins/genesis-custom-blocks

executors:
  php:
    docker:
      - image: circleci/php:7.4.5-cli-node
  node-only:
    docker:
      - image: cimg/node:12.16

commands:
  set-up-packages:
    description: "Installing packages and building"
    steps:
      - run: composer install && npm install && npm run build

  install-composer:
    description: "Installing Composer"
    parameters:
      user:
        type: string
        default: ''
    steps:
      - run:
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            EXPECTED_SIGNATURE=$(curl -s https://composer.github.io/installer.sig)
            ACTUAL_SIGNATURE=$(php -r "echo hash_file('sha384', 'composer-setup.php');")
            [[ "$EXPECTED_SIGNATURE" == "$ACTUAL_SIGNATURE" ]] && << parameters.user >> php composer-setup.php --install-dir=/bin --filename=composer || exit 1

  prepare-environment:
    description: "Preparing the environment"
    steps:
      - run: apk update && apk add --update --no-cache git
      - run:
          name: Installing WordPress and setting up tests
          command: |
            git clone git://develop.git.wordpress.org/ wordpress-develop
            cp wordpress-develop/wp-tests-config-sample.php wordpress-develop/wp-tests-config.php
            sed -i 's/localhost/127.0.0.1/g' wordpress-develop/wp-tests-config.php
      - run: mkdir -p *PLUGIN_FULL_PATH
      - checkout:
          path: *PLUGIN_FULL_PATH
      - run:
          working_directory: *PLUGIN_FULL_PATH
          command: |
            echo "Downloading Node binary"
            curl -O --silent --show-error --location --fail --retry 3 https://nodejs.org/download/release/v13.9.0/node-v13.9.0-linux-x64.tar.gz

            echo "Installing Node binary"
            if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi
            $SUDO tar -xzf "node-v13.9.0-linux-x64.tar.gz" \
              -C /usr/local/bin \
              --strip-components=1 --no-same-owner > /dev/null 2>&1

            if [[ ! -e /usr/local/bin/nodejs ]]; then
              echo "Adding a symlink"
              $SUDO ln -s /usr/local/bin/node /usr/local/bin/nodejs
            fi
            export PATH=$PATH:/usr/local/bin/nodejs && PATH=$PATH:/usr/local/bin/ && npm --version && composer install && npm install && npm run build

jobs:
  lint:
    executor:
      name: php
    steps:
      - checkout
      - set-up-packages
      - run: npm run lint

  php-tests:
    parameters:
      php-version:
        type: string
    docker:
      - image: wordpress:php<< parameters.php-version >>-fpm-alpine
        environment:
          WP_TESTS_DIR: /root/project/wordpress-develop/tests/phpunit
      - image: mysql:5.7
        environment:
          MYSQL_DATABASE: youremptytestdbnamehere
          MYSQL_USER: yourusernamehere
          MYSQL_PASSWORD: yourpasswordhere
          MYSQL_ROOT_PASSWORD: wordpress
    steps:
      - install-composer
      - prepare-environment
      - run:
          working_directory: *PLUGIN_FULL_PATH
          command: composer require --dev phpunit/phpunit 5.7.9 && ./vendor/bin/phpunit

  js-tests:
    executor: node-only
    steps:
      - checkout
      - run: npm ci && npm run test:js

  e2e-tests:
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - checkout
      - run: sudo apt-get update && sudo apt-get install php php-xml
      - install-composer:
          user: sudo
      - run:
          name: Updating Node version
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # Loads nvm.
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # Loads nvm bash_completion.
            nvm install --lts
      - set-up-packages
      - run: npm run env start && npm run test:e2e

workflows:
  tests:
    jobs:
      - php-tests:
          matrix:
            parameters:
              php-version: [ '5.6' ]
